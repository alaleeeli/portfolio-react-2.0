{"ast":null,"code":"import { useSelectableItem as $8kq0t$useSelectableItem, useSelectableCollection as $8kq0t$useSelectableCollection } from \"@react-aria/selection\";\nimport { useLabels as $8kq0t$useLabels, mergeProps as $8kq0t$mergeProps, useId as $8kq0t$useId } from \"@react-aria/utils\";\nimport { useHasTabbableChild as $8kq0t$useHasTabbableChild } from \"@react-aria/focus\";\nimport { useMemo as $8kq0t$useMemo } from \"react\";\nimport { useLocale as $8kq0t$useLocale } from \"@react-aria/i18n\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n    * Copyright 2020 Adobe. All rights reserved.\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License. You may obtain a copy\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software distributed under\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n    * OF ANY KIND, either express or implied. See the License for the specific language\n    * governing permissions and limitations under the License.\n    */ /*\n       * Copyright 2020 Adobe. All rights reserved.\n       * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n       * you may not use this file except in compliance with the License. You may obtain a copy\n       * of the License at http://www.apache.org/licenses/LICENSE-2.0\n       *\n       * Unless required by applicable law or agreed to in writing, software distributed under\n       * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n       * OF ANY KIND, either express or implied. See the License for the specific language\n       * governing permissions and limitations under the License.\n       */\nconst $99b62ae3ff97ec45$export$c5f62239608282b6 = new WeakMap();\nfunction $99b62ae3ff97ec45$export$567fc7097e064344(state, key, role) {\n  if (typeof key === \"string\") key = key.replace(/\\s+/g, \"\");\n  let baseId = $99b62ae3ff97ec45$export$c5f62239608282b6.get(state);\n  return `${baseId}-${role}-${key}`;\n}\nfunction $0175d55c2a017ebc$export$fdf4756d5b8ef90a(props, state, ref) {\n  let {\n    key: key,\n    isDisabled: propsDisabled,\n    shouldSelectOnPressUp: shouldSelectOnPressUp\n  } = props;\n  let {\n    selectionManager: manager,\n    selectedKey: selectedKey\n  } = state;\n  let isSelected = key === selectedKey;\n  let isDisabled = propsDisabled || state.isDisabled || state.disabledKeys.has(key);\n  let {\n    itemProps: itemProps,\n    isPressed: isPressed\n  } = (0, $8kq0t$useSelectableItem)({\n    selectionManager: manager,\n    key: key,\n    ref: ref,\n    isDisabled: isDisabled,\n    shouldSelectOnPressUp: shouldSelectOnPressUp\n  });\n  let tabId = (0, $99b62ae3ff97ec45$export$567fc7097e064344)(state, key, \"tab\");\n  let tabPanelId = (0, $99b62ae3ff97ec45$export$567fc7097e064344)(state, key, \"tabpanel\");\n  let {\n    tabIndex: tabIndex\n  } = itemProps;\n  return {\n    tabProps: {\n      ...itemProps,\n      id: tabId,\n      \"aria-selected\": isSelected,\n      \"aria-disabled\": isDisabled || undefined,\n      \"aria-controls\": isSelected ? tabPanelId : undefined,\n      tabIndex: isDisabled ? undefined : tabIndex,\n      role: \"tab\"\n    },\n    isSelected: isSelected,\n    isDisabled: isDisabled,\n    isPressed: isPressed\n  };\n}\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $34bce698202e07cb$export$fae0121b5afe572d(props, state, ref) {\n  // The tabpanel should have tabIndex=0 when there are no tabbable elements within it.\n  // Otherwise, tabbing from the focused tab should go directly to the first tabbable element\n  // within the tabpanel.\n  let tabIndex = (0, $8kq0t$useHasTabbableChild)(ref) ? undefined : 0;\n  var _props_id;\n  const id = (0, $99b62ae3ff97ec45$export$567fc7097e064344)(state, (_props_id = props.id) !== null && _props_id !== void 0 ? _props_id : state === null || state === void 0 ? void 0 : state.selectedKey, \"tabpanel\");\n  const tabPanelProps = (0, $8kq0t$useLabels)({\n    ...props,\n    id: id,\n    \"aria-labelledby\": (0, $99b62ae3ff97ec45$export$567fc7097e064344)(state, state === null || state === void 0 ? void 0 : state.selectedKey, \"tab\")\n  });\n  return {\n    tabPanelProps: (0, $8kq0t$mergeProps)(tabPanelProps, {\n      tabIndex: tabIndex,\n      role: \"tabpanel\",\n      \"aria-describedby\": props[\"aria-describedby\"],\n      \"aria-details\": props[\"aria-details\"]\n    })\n  };\n}\n\n/*\n* Copyright 2020 Adobe. All rights reserved.\n* This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License. You may obtain a copy\n* of the License at http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software distributed under\n* the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n* OF ANY KIND, either express or implied. See the License for the specific language\n* governing permissions and limitations under the License.\n*/\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nclass $bfc6f2d60b8a4c40$export$15010ca3c1abe90b {\n  getKeyLeftOf(key) {\n    if (this.flipDirection) return this.getNextKey(key);\n    return this.getPreviousKey(key);\n  }\n  getKeyRightOf(key) {\n    if (this.flipDirection) return this.getPreviousKey(key);\n    return this.getNextKey(key);\n  }\n  getKeyAbove(key) {\n    return this.getPreviousKey(key);\n  }\n  getKeyBelow(key) {\n    return this.getNextKey(key);\n  }\n  getFirstKey() {\n    let key = this.collection.getFirstKey();\n    if (this.disabledKeys.has(key)) key = this.getNextKey(key);\n    return key;\n  }\n  getLastKey() {\n    let key = this.collection.getLastKey();\n    if (this.disabledKeys.has(key)) key = this.getPreviousKey(key);\n    return key;\n  }\n  getNextKey(key) {\n    do {\n      key = this.collection.getKeyAfter(key);\n      if (key == null) key = this.collection.getFirstKey();\n    } while (this.disabledKeys.has(key));\n    return key;\n  }\n  getPreviousKey(key) {\n    do {\n      key = this.collection.getKeyBefore(key);\n      if (key == null) key = this.collection.getLastKey();\n    } while (this.disabledKeys.has(key));\n    return key;\n  }\n  constructor(collection, direction, orientation, disabledKeys = new Set()) {\n    this.collection = collection;\n    this.flipDirection = direction === \"rtl\" && orientation === \"horizontal\";\n    this.disabledKeys = disabledKeys;\n  }\n}\nfunction $58d314389b21fa3f$export$773e389e644c5874(props, state, ref) {\n  let {\n    orientation = \"horizontal\",\n    keyboardActivation = \"automatic\"\n  } = props;\n  let {\n    collection: collection,\n    selectionManager: manager,\n    disabledKeys: disabledKeys\n  } = state;\n  let {\n    direction: direction\n  } = (0, $8kq0t$useLocale)();\n  let delegate = (0, $8kq0t$useMemo)(() => new (0, $bfc6f2d60b8a4c40$export$15010ca3c1abe90b)(collection, direction, orientation, disabledKeys), [collection, disabledKeys, orientation, direction]);\n  let {\n    collectionProps: collectionProps\n  } = (0, $8kq0t$useSelectableCollection)({\n    ref: ref,\n    selectionManager: manager,\n    keyboardDelegate: delegate,\n    selectOnFocus: keyboardActivation === \"automatic\",\n    disallowEmptySelection: true,\n    scrollRef: ref\n  });\n  // Compute base id for all tabs\n  let tabsId = (0, $8kq0t$useId)();\n  (0, $99b62ae3ff97ec45$export$c5f62239608282b6).set(state, tabsId);\n  let tabListLabelProps = (0, $8kq0t$useLabels)({\n    ...props,\n    id: tabsId\n  });\n  return {\n    tabListProps: {\n      ...(0, $8kq0t$mergeProps)(collectionProps, tabListLabelProps),\n      role: \"tablist\",\n      \"aria-orientation\": orientation,\n      tabIndex: undefined\n    }\n  };\n}\nexport { $0175d55c2a017ebc$export$fdf4756d5b8ef90a as useTab, $34bce698202e07cb$export$fae0121b5afe572d as useTabPanel, $58d314389b21fa3f$export$773e389e644c5874 as useTabList };","map":{"version":3,"names":["$99b62ae3ff97ec45$export$c5f62239608282b6","WeakMap","$99b62ae3ff97ec45$export$567fc7097e064344","state","key","role","replace","baseId","get","$0175d55c2a017ebc$export$fdf4756d5b8ef90a","props","ref","isDisabled","propsDisabled","shouldSelectOnPressUp","selectionManager","manager","selectedKey","isSelected","disabledKeys","has","itemProps","isPressed","$8kq0t$useSelectableItem","tabId","tabPanelId","tabIndex","tabProps","id","undefined","$34bce698202e07cb$export$fae0121b5afe572d","$8kq0t$useHasTabbableChild","_props_id","tabPanelProps","$8kq0t$useLabels","$8kq0t$mergeProps","$bfc6f2d60b8a4c40$export$15010ca3c1abe90b","getKeyLeftOf","flipDirection","getNextKey","getPreviousKey","getKeyRightOf","getKeyAbove","getKeyBelow","getFirstKey","collection","getLastKey","getKeyAfter","getKeyBefore","constructor","direction","orientation","Set","$58d314389b21fa3f$export$773e389e644c5874","keyboardActivation","$8kq0t$useLocale","delegate","$8kq0t$useMemo","collectionProps","$8kq0t$useSelectableCollection","keyboardDelegate","selectOnFocus","disallowEmptySelection","scrollRef","tabsId","$8kq0t$useId","set","tabListLabelProps","tabListProps"],"sources":["/Users/rashed.alaleeli/Documents/GitHub/portfolio-react/node_modules/@react-aria/tabs/dist/packages/@react-aria/tabs/src/index.ts","/Users/rashed.alaleeli/Documents/GitHub/portfolio-react/node_modules/@react-aria/tabs/dist/packages/@react-aria/tabs/src/useTab.ts","/Users/rashed.alaleeli/Documents/GitHub/portfolio-react/node_modules/@react-aria/tabs/dist/packages/@react-aria/tabs/src/utils.ts","/Users/rashed.alaleeli/Documents/GitHub/portfolio-react/node_modules/@react-aria/tabs/dist/packages/@react-aria/tabs/src/useTabPanel.ts","/Users/rashed.alaleeli/Documents/GitHub/portfolio-react/node_modules/@react-aria/tabs/dist/packages/@react-aria/tabs/src/useTabList.ts","/Users/rashed.alaleeli/Documents/GitHub/portfolio-react/node_modules/@react-aria/tabs/dist/packages/@react-aria/tabs/src/TabsKeyboardDelegate.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nexport {useTab} from './useTab';\nexport {useTabPanel} from './useTabPanel';\nexport {useTabList} from './useTabList';\nexport type {AriaTabListProps, AriaTabPanelProps, AriaTabProps} from '@react-types/tabs';\nexport type {Orientation} from '@react-types/shared';\nexport type {TabAria} from './useTab';\nexport type {TabPanelAria} from './useTabPanel';\nexport type {AriaTabListOptions, TabListAria} from './useTabList';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaTabProps} from '@react-types/tabs';\nimport {DOMAttributes, FocusableElement} from '@react-types/shared';\nimport {generateId} from './utils';\nimport {RefObject} from 'react';\nimport {TabListState} from '@react-stately/tabs';\nimport {useSelectableItem} from '@react-aria/selection';\n\nexport interface TabAria {\n  /** Props for the tab element. */\n  tabProps: DOMAttributes,\n  /** Whether the tab is currently selected. */\n  isSelected: boolean,\n  /** Whether the tab is disabled. */\n  isDisabled: boolean,\n  /** Whether the tab is currently in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a tab.\n * When selected, the associated tab panel is shown.\n */\nexport function useTab<T>(\n  props: AriaTabProps,\n  state: TabListState<T>,\n  ref: RefObject<FocusableElement>\n): TabAria {\n  let {key, isDisabled: propsDisabled, shouldSelectOnPressUp} = props;\n  let {selectionManager: manager, selectedKey} = state;\n\n  let isSelected = key === selectedKey;\n\n  let isDisabled = propsDisabled || state.isDisabled || state.disabledKeys.has(key);\n  let {itemProps, isPressed} = useSelectableItem({\n    selectionManager: manager,\n    key,\n    ref,\n    isDisabled,\n    shouldSelectOnPressUp\n  });\n\n  let tabId = generateId(state, key, 'tab');\n  let tabPanelId = generateId(state, key, 'tabpanel');\n  let {tabIndex} = itemProps;\n\n  return {\n    tabProps: {\n      ...itemProps,\n      id: tabId,\n      'aria-selected': isSelected,\n      'aria-disabled': isDisabled || undefined,\n      'aria-controls': isSelected ? tabPanelId : undefined,\n      tabIndex: isDisabled ? undefined : tabIndex,\n      role: 'tab'\n    },\n    isSelected,\n    isDisabled,\n    isPressed\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Key} from 'react';\nimport {TabListState} from '@react-stately/tabs';\n\nexport const tabsIds = new WeakMap<TabListState<unknown>, string>();\n\nexport function generateId<T>(state: TabListState<T>, key: Key, role: string) {\n  if (typeof key === 'string') {\n    key = key.replace(/\\s+/g, '');\n  }\n\n  let baseId = tabsIds.get(state);\n  return `${baseId}-${role}-${key}`;\n}\n\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaTabPanelProps} from '@react-types/tabs';\nimport {DOMAttributes} from '@react-types/shared';\nimport {generateId} from './utils';\nimport {mergeProps, useLabels} from '@react-aria/utils';\nimport {RefObject} from 'react';\nimport {TabListState} from '@react-stately/tabs';\nimport {useHasTabbableChild} from '@react-aria/focus';\n\nexport interface TabPanelAria {\n  /** Props for the tab panel element. */\n  tabPanelProps: DOMAttributes\n}\n\n\n/**\n * Provides the behavior and accessibility implementation for a tab panel. A tab panel is a container for\n * the contents of a tab, and is shown when the tab is selected.\n */\nexport function useTabPanel<T>(props: AriaTabPanelProps, state: TabListState<T>, ref: RefObject<Element>): TabPanelAria {\n  // The tabpanel should have tabIndex=0 when there are no tabbable elements within it.\n  // Otherwise, tabbing from the focused tab should go directly to the first tabbable element\n  // within the tabpanel.\n  let tabIndex = useHasTabbableChild(ref) ? undefined : 0;\n\n  const id = generateId(state, props.id ?? state?.selectedKey, 'tabpanel');\n  const tabPanelProps = useLabels({...props, id, 'aria-labelledby': generateId(state, state?.selectedKey, 'tab')});\n\n  return {\n    tabPanelProps: mergeProps(tabPanelProps, {\n      tabIndex,\n      role: 'tabpanel',\n      'aria-describedby': props['aria-describedby'],\n      'aria-details': props['aria-details']\n    })\n  };\n}\n","/*\n* Copyright 2020 Adobe. All rights reserved.\n* This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License. You may obtain a copy\n* of the License at http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software distributed under\n* the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n* OF ANY KIND, either express or implied. See the License for the specific language\n* governing permissions and limitations under the License.\n*/\n\nimport {AriaTabListProps} from '@react-types/tabs';\nimport {DOMAttributes} from '@react-types/shared';\nimport {mergeProps, useId, useLabels} from '@react-aria/utils';\nimport {RefObject, useMemo} from 'react';\nimport {TabListState} from '@react-stately/tabs';\nimport {tabsIds} from './utils';\nimport {TabsKeyboardDelegate} from './TabsKeyboardDelegate';\nimport {useLocale} from '@react-aria/i18n';\nimport {useSelectableCollection} from '@react-aria/selection';\n\nexport interface AriaTabListOptions<T> extends Omit<AriaTabListProps<T>, 'children'> {}\n\nexport interface TabListAria {\n  /** Props for the tablist container. */\n  tabListProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a tab list.\n * Tabs organize content into multiple sections and allow users to navigate between them.\n */\nexport function useTabList<T>(props: AriaTabListOptions<T>, state: TabListState<T>, ref: RefObject<HTMLElement>): TabListAria {\n  let {\n    orientation = 'horizontal',\n    keyboardActivation = 'automatic'\n  } = props;\n  let {\n    collection,\n    selectionManager: manager,\n    disabledKeys\n  } = state;\n  let {direction} = useLocale();\n  let delegate = useMemo(() => new TabsKeyboardDelegate(\n    collection,\n    direction,\n    orientation,\n    disabledKeys), [collection, disabledKeys, orientation, direction]);\n\n  let {collectionProps} = useSelectableCollection({\n    ref,\n    selectionManager: manager,\n    keyboardDelegate: delegate,\n    selectOnFocus: keyboardActivation === 'automatic',\n    disallowEmptySelection: true,\n    scrollRef: ref\n  });\n\n  // Compute base id for all tabs\n  let tabsId = useId();\n  tabsIds.set(state, tabsId);\n\n  let tabListLabelProps = useLabels({...props, id: tabsId});\n\n  return {\n    tabListProps: {\n      ...mergeProps(collectionProps, tabListLabelProps),\n      role: 'tablist',\n      'aria-orientation': orientation,\n      tabIndex: undefined\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, Direction, KeyboardDelegate, Orientation} from '@react-types/shared';\nimport {Key} from 'react';\n\nexport class TabsKeyboardDelegate<T> implements KeyboardDelegate {\n  private collection: Collection<T>;\n  private flipDirection: boolean;\n  private disabledKeys: Set<Key>;\n\n  constructor(collection: Collection<T>, direction: Direction, orientation: Orientation, disabledKeys: Set<Key> = new Set()) {\n    this.collection = collection;\n    this.flipDirection = direction === 'rtl' && orientation === 'horizontal';    \n    this.disabledKeys = disabledKeys;\n  }\n\n  getKeyLeftOf(key: Key) {\n    if (this.flipDirection) {\n      return this.getNextKey(key);\n    }\n    return this.getPreviousKey(key);\n  }\n\n  getKeyRightOf(key: Key) {\n    if (this.flipDirection) {\n      return this.getPreviousKey(key);\n    } \n    return this.getNextKey(key);\n  }\n\n  getKeyAbove(key: Key) {\n    return this.getPreviousKey(key);\n  }\n\n  getKeyBelow(key: Key) {\n    return this.getNextKey(key);\n  }\n\n  getFirstKey() {\n    let key = this.collection.getFirstKey();\n    if (this.disabledKeys.has(key)) {\n      key = this.getNextKey(key);\n    }\n    return key;\n  }\n\n  getLastKey() {\n    let key = this.collection.getLastKey();\n    if (this.disabledKeys.has(key)) {\n      key = this.getPreviousKey(key);\n    }\n    return key;\n  }\n\n  getNextKey(key) {\n    do {\n      key = this.collection.getKeyAfter(key);\n      if (key == null) {\n        key = this.collection.getFirstKey();\n      }\n    } while (this.disabledKeys.has(key));\n    return key;\n  }\n\n  getPreviousKey(key) {\n    do {\n      key = this.collection.getKeyBefore(key);\n      if (key == null) {\n        key = this.collection.getLastKey();\n      }\n    } while (this.disabledKeys.has(key));\n    return key;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}